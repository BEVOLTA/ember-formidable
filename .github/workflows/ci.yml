name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  TURBO_API: http://127.0.0.1:9080
  TURBO_TOKEN: this-is-not-a-secret
  TURBO_TEAM: myself

jobs:
  setup:
    name: 'Setup'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      pending: ${{ steps.set-pending.outputs.pending }}
    steps:
      - uses: wyvox/action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build
      - id: set-pending
        run: echo "pending=$(./cache-status.sh)" >> $GITHUB_OUTPUT
      - run:  echo ${{ github.event.number }} > ./pr-number.txt

  # Every PR will need linting. Turbo's cache can optimize per-package
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 5
    steps:
      - uses: wyvox/action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build
      - run: pnpm i -f # sync for some reason isn't running before lint
      - run: pnpm lint


  test:
    name: "Default Tests"
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 5
    if: ${{ fromJSON(needs.setup.outputs.pending).test-app.test.status == 'MISS' }}
    steps:
      - uses: wyvox/action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build
      - run: pnpm turbo test --filter test-app

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 5
    if: ${{ fromJSON(needs.setup.outputs.pending).test-app.test.status == 'MISS' }}
    steps:
      - uses: wyvox/action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pnpm-args: --no-lockfile
      - run: pnpm build
      - run: pnpm turbo test --filter test-app

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 10
    if: ${{ fromJSON(needs.setup.outputs.pending).test-app.test.status == 'MISS' }}
    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-4.12
          - ember-5.0
          - ember-release
          - ember-beta
          - ember-canary
          - "'ember-lts-4.12 + embroider-safe'"
          - "'ember-lts-4.12 + embroider-optimized'"
          - "'ember-lts-5.0 + embroider-safe'"
          - "'ember-lts-5.0 + embroider-optimized'"
          - "'ember-release + embroider-optimized'"

    steps:
      - uses: wyvox/action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build
      - name: Run Tests
        run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }} --skip-cleanup
        working-directory: test-app


  # This job is for checking specific versions of typescript
  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    if: ${{ fromJSON(needs.setup.outputs.pending).test-app['lint:types'].status == 'MISS' }}
    timeout-minutes: 5
    needs: [test]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@5.0
          - typescript@5.1
          - typescript@rc
          - typescript@next

    steps:
      - uses: wyvox/action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: ./test-app
      - name: 'Type checking'
        run: pnpm turbo --filter 'test-app' lint:types

  # Doesn't work yet...
  # docs-deps:
  #   name: Install Docs dependencies
  #   runs-on: ubuntu-latest
  #   needs: [ lint ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'npm'
  #         cache-dependency-path: '**/docs/package-lock.json'
  #     - uses: actions/cache@v3
  #       with:
  #         path: '**/docs/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/docs/package-lock.json') }}
  #     - name: Reconfigure git to use HTTP authentication
  #       run: >
  #         git config --global url."https://github.com/".insteadOf
  #         ssh://git@github.com/
  #     - name: Install docs deps
  #       run: |
  #         cd docs
  #         npm ci

  # docs-build:
  #   name: Build Docs App
  #   runs-on: ubuntu-latest
  #   needs: [ docs-deps ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'npm'
  #         cache-dependency-path: '**/docs/package-lock.json'
  #     - uses: actions/cache@v3
  #       with:
  #         path: '**/docs/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/client/package-lock.json') }}
  #     - uses: actions/cache@v3
  #       with:
  #         path: '**/client/dist'
  #         key: ${{ runner.os }}-client-dist-${{ github.sha }}
  #     - run: |
  #         cd docs
  #         ./node_modules/ember-cli/bin/ember build --environment=production






