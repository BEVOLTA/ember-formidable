{"version":3,"file":"formidable.js","sources":["../../src/services/formidable.ts"],"sourcesContent":["import { assert } from '@ember/debug';\nimport Service from '@ember/service';\n\nimport { tracked } from 'tracked-built-ins';\n\nimport type { FormidableApi } from '../';\nimport type { GenericObject } from '../types';\n\ntype GetApiFn = () => FormidableApi;\nexport default class FormidableService extends Service {\n  @tracked formidableApis: Record<string, GetApiFn> = {};\n\n  getFormidableApi(id: string): FormidableApi {\n    const ids = Object.keys(this.formidableApis);\n    const getApi = this.formidableApis[id];\n\n    assert(\n      `Your formidable must have an id for your service to work!\n         id: ${id}\n         available formidables: ${ids.length ? ids.join(',') : 'None'}\n        `,\n      !!getApi,\n    );\n\n    return getApi();\n  }\n\n  getValue(id: string, field: string): unknown {\n    const { getValue } = this.getFormidableApi(id);\n\n    return getValue(field);\n  }\n\n  getValues(id: string, fields: string[]): GenericObject {\n    const { getValue } = this.getFormidableApi(id);\n\n    return fields.reduce((acc: Record<string, unknown>, field) => {\n      acc[field] = getValue(field);\n\n      return acc;\n    }, {});\n  }\n\n  _register(id: string, getData: GetApiFn): void {\n    this.formidableApis[id] = getData;\n  }\n\n  _unregister(id: string): void {\n    if (this.formidableApis[id]) {\n      delete this.formidableApis[id];\n    }\n  }\n}\n\ndeclare module '@ember/service' {\n  interface Registry {\n    formidable: FormidableService;\n  }\n}\n"],"names":["FormidableService","_class","Service","constructor","args","_initializerDefineProperty","_descriptor","getFormidableApi","id","ids","Object","keys","formidableApis","getApi","assert","length","join","getValue","field","getValues","fields","reduce","acc","_register","getData","_unregister","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer"],"mappings":";;;;;;;AASqBA,IAAAA,iBAAiB,IAAAC,MAAA,GAAvB,MAAMD,iBAAiB,SAASE,OAAO,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,yBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;EAGrDC,gBAAgBA,CAACC,EAAU,EAAiB;IAC1C,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAAA;AAC5C,IAAA,MAAMC,MAAM,GAAG,IAAI,CAACD,cAAc,CAACJ,EAAE,CAAC,CAAA;AAEtCM,IAAAA,MAAM,CACH,CAAA;AACP,aAAA,EAAeN,EAAG,CAAA;AAClB,gCAAkCC,EAAAA,GAAG,CAACM,MAAM,GAAGN,GAAG,CAACO,IAAI,CAAC,GAAG,CAAC,GAAG,MAAO,CAAA;AACtE,QAAA,CAAS,EACH,CAAC,CAACH,MACJ,CAAC,CAAA;IAED,OAAOA,MAAM,EAAE,CAAA;AACjB,GAAA;AAEAI,EAAAA,QAAQA,CAACT,EAAU,EAAEU,KAAa,EAAW;IAC3C,MAAM;AAAED,MAAAA,QAAAA;AAAS,KAAC,GAAG,IAAI,CAACV,gBAAgB,CAACC,EAAE,CAAC,CAAA;IAE9C,OAAOS,QAAQ,CAACC,KAAK,CAAC,CAAA;AACxB,GAAA;AAEAC,EAAAA,SAASA,CAACX,EAAU,EAAEY,MAAgB,EAAiB;IACrD,MAAM;AAAEH,MAAAA,QAAAA;AAAS,KAAC,GAAG,IAAI,CAACV,gBAAgB,CAACC,EAAE,CAAC,CAAA;IAE9C,OAAOY,MAAM,CAACC,MAAM,CAAC,CAACC,GAA4B,EAAEJ,KAAK,KAAK;AAC5DI,MAAAA,GAAG,CAACJ,KAAK,CAAC,GAAGD,QAAQ,CAACC,KAAK,CAAC,CAAA;AAE5B,MAAA,OAAOI,GAAG,CAAA;KACX,EAAE,EAAE,CAAC,CAAA;AACR,GAAA;AAEAC,EAAAA,SAASA,CAACf,EAAU,EAAEgB,OAAiB,EAAQ;AAC7C,IAAA,IAAI,CAACZ,cAAc,CAACJ,EAAE,CAAC,GAAGgB,OAAO,CAAA;AACnC,GAAA;EAEAC,WAAWA,CAACjB,EAAU,EAAQ;AAC5B,IAAA,IAAI,IAAI,CAACI,cAAc,CAACJ,EAAE,CAAC,EAAE;AAC3B,MAAA,OAAO,IAAI,CAACI,cAAc,CAACJ,EAAE,CAAC,CAAA;AAChC,KAAA;AACF,GAAA;AACF,CAAC,GAAAF,WAAA,GAAAoB,yBAAA,CAAAzB,MAAA,CAAA0B,SAAA,EAAA,gBAAA,EAAA,CA1CEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAA4C,EAAE,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA,GAAA/B,MAAA;;;;"}